(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{132:function(t,a,s){t.exports=s.p+"assets/img/image-20200107103624817.bc3ce2c7.png"},231:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"技术栈-名词解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#技术栈-名词解析"}},[t._v("#")]),t._v(" 技术栈 名词解析")]),t._v(" "),n("h2",{attrs:{id:"devops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#devops"}},[t._v("#")]),t._v(" DevOps")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概念解析")]),t._v(" "),n("p",[n("code",[t._v("DevOps")]),t._v("（Development和Operations的组合词）是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。")]),t._v(" "),n("p",[n("code",[t._v("DevOps")]),t._v("是为了填补开发端和运维端之间的信息鸿沟，改善团队之间的协作关系。不过需要澄清的一点是，从开发到运维，中间还有测试环节。DevOps其实包含了三个部分：开发、测试和运维。")]),t._v(" "),n("p",[t._v("它是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。")]),t._v(" "),n("p",[t._v("它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运营工作必须紧密合作。")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("扩展阅读")]),t._v(" "),n("blockquote",[n("p",[t._v("实现DevOps需要什么")])]),t._v(" "),n("p",[t._v("工具上的准备:")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("代码管理（SCM）")]),t._v("：GitHub、GitLab、BitBucket、SubVersion")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("构建工具")]),t._v("：Ant、Gradle、maven")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("自动部署")]),t._v("：Capistrano、CodeDeploy")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("持续集成（CI）")]),t._v("：Bamboo、Hudson、Jenkins")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("配置管理")]),t._v("：Ansible、Chef、Puppet、SaltStack、ScriptRock GuardRail")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("容器")]),t._v("：Docker、LXC、第三方厂商如AWS")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("编排")]),t._v("：Kubernetes、Core、Apache Mesos、DC/OS")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("服务注册与发现")]),t._v("：Zookeeper、etcd、Consul")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("脚本语言")]),t._v("：python、ruby、shell")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("日志管理")]),t._v("：ELK、Logentries")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("系统监控")]),t._v("：Datadog、Graphite、Icinga、Nagios zabbix")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("性能监控")]),t._v("：AppDynamics、New Relic、Splunk")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("压力测试")]),t._v("：JMeter、Blaze Meter、loader.io")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("预警")]),t._v("：PagerDuty、pingdom、厂商自带如AWS SNS")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("HTTP加速器")]),t._v("：Varnish")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("消息总线")]),t._v("：ActiveMQ、SQS")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("应用服务器")]),t._v("：Tomcat、JBoss")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Web服务器")]),t._v("：Apache、Nginx、IIS")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("数据库")]),t._v("：MySQL、Oracle、PostgreSQL等关系型数据库；cassandra、mongoDB、redis等NoSQL数据库")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("项目管理（PM）")]),t._v("：Jira、Asana、Taiga、Trello、Basecamp、Pivotal Tracker")])])])]),t._v(" "),n("h2",{attrs:{id:"中台技术"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中台技术"}},[t._v("#")]),t._v(" 中台技术")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概念解析")]),t._v(" "),n("p",[t._v("「技术中台」，说白了就是强调资源整合、能力沉淀的平台体系，当「技术前台」实现业务功能时，为他们提供底层的技术、数据等资源和能力的支持。")]),t._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"中台技术",href:"/技术栈-名词解析.assets/20190805135111848.png"}},[n("img",{attrs:{src:t.$withBase("/技术栈-名词解析.assets/20190805135111848.png"),alt:""}})])]),t._v(" "),n("p",[t._v("上图可见，「技术中台」有点像编程时的适配层，起到承上启下的作用，将整个公司的技术能力与业务能力分离，并以产品化方式向前台提供技术赋能，形成强力支撑。")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("扩展阅读")]),t._v(" "),n("p",[t._v("技术中台选型的前提")]),t._v(" "),n("ul",[n("li",[t._v("技术组织结构垂直化：也就是说，打造「技术中台」的前提是平台化，而平台化的先决条件是「组织结构垂直化，技术工具公共化」。")]),t._v(" "),n("li",[t._v("业务线多、且复杂：将可以复用的服务和代码，交由这几个组开发出服务来，给业务组使用，这样数据模型会统一，业务开发的时候，首先先看看有哪些现成的服务可以使用，不用全部从零开发，也会提高开发效率。")])])]),t._v(" "),n("h2",{attrs:{id:"云平台"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#云平台"}},[t._v("#")]),t._v(" 云平台")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概念解析")])]),t._v(" "),n("h2",{attrs:{id:"saas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#saas"}},[t._v("#")]),t._v(" SAAS")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("软件即服务")]),t._v(" "),n("p",[n("code",[t._v("SaaS")]),t._v("是"),n("code",[t._v("Software-as-a-service")]),t._v("（软件即服务）的简称，是随着互联网技术的发展和应用软件的成熟，而在21世纪开始兴起的一种完全创新的软件应用模式。它与“on-demand software”（按需软件)，"),n("code",[t._v("the application service provider")]),t._v("(ASP，应用服务提供商)，"),n("code",[t._v("hosted software")]),t._v("(托管软件)所具有相似的含义。它是一种通过Internet提供软件的模式，厂商将应用软件统一部署在自己的服务器上，客户可以根据自己实际需求，通过互联网向厂商定购所需的应用软件服务，按定购的服务多少和时间长短向厂商支付费用，并通过互联网获得厂商提供的服务。用户不用再购买软件，而改用向提供商租用基于Web的软件，来管理企业经营活动，且无需对软件进行维护，服务提供商会全权管理和维护软件，软件厂商在向客户提供互联网应用的同时，也提供软件的离线操作和本地数据存储，让用户随时随地都可以使用其定购的软件和服务。对于许多小型企业来说，SaaS是采用先进技术的最好途径，它消除了企业购买、构建和维护基础设施和应用程序的需要。")])]),t._v(" "),n("h2",{attrs:{id:"paas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#paas"}},[t._v("#")]),t._v(" PaaS")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("平台即服务")]),t._v(" "),n("p",[n("code",[t._v("Platform-as-a-Service")]),t._v("（平台即服务）提供给消费者的服务是把客户采用提供的开发语言和工具（例如Java，python, .Net等）开发的或收购的应用程序部署到供应商的云计算基础设施上去。\n客户不需要管理或控制底层的云基础设施，包括网络、服务器、操作系统、存储等，但客户能控制部署的应用程序，也可能控制运行应用程序的托管环境配置；")])]),t._v(" "),n("h2",{attrs:{id:"iaas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iaas"}},[t._v("#")]),t._v(" IaaS")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("基础设施即服务")]),t._v(" "),n("p",[n("code",[t._v("Infrastructure-as-a-Service")]),t._v("（基础设施即服务）提供给消费者的服务是对所有计算基础设施的利用，包括处理CPU、内存、存储、网络和其它基本的计算资源，用户能够部署和运行任意软件，包括操作系统和应用程序。\n消费者不管理或控制任何云计算基础设施，但能控制操作系统的选择、存储空间、部署的应用，也有可能获得有限制的网络组件（例如路由器、，防火墙，、负载均衡器等）的控制。")])]),t._v(" "),n("div",{staticClass:"warning custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("扩展阅读")]),t._v(" "),n("blockquote",[n("p",[t._v("IaaS, PaaS和SaaS三种云计算服务模式的区别")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("SaaS 是软件的开发、管理、部署都交给第三方，不需要关心技术问题，可以拿来即用。普通用户接触到的互联网服务，几乎都是 SaaS，下面是一些例子。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("客户管理服务 Salesforce")])]),t._v(" "),n("li",[n("p",[t._v("团队协同服务 Google Apps")])]),t._v(" "),n("li",[n("p",[t._v("储存服务 Box")])]),t._v(" "),n("li",[n("p",[t._v("储存服务 Dropbox")])]),t._v(" "),n("li",[n("p",[t._v("社交服务 Facebook / Twitter / Instagram")])])])]),t._v(" "),n("li",[n("p",[t._v("PaaS 提供软件部署平台（runtime），抽象掉了硬件和操作系统细节，可以无缝地扩展（scaling）。开发者只需要关注自己的业务逻辑，不需要关注底层。下面这些都属于 PaaS。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Heroku")])]),t._v(" "),n("li",[n("p",[t._v("Google App Engine")])]),t._v(" "),n("li",[n("p",[t._v("OpenShift")])])])]),t._v(" "),n("li",[n("p",[t._v("IaaS 是云服务的最底层，主要提供一些基础资源。它与 PaaS 的区别是，用户需要自己控制底层，实现基础设施的使用逻辑。下面这些都属于 IaaS。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Amazon EC2")])]),t._v(" "),n("li",[n("p",[t._v("Digital Ocean")])]),t._v(" "),n("li",[n("p",[t._v("RackSpace Cloud")])])])])])]),t._v(" "),n("h2",{attrs:{id:"spi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spi"}},[t._v("#")]),t._v(" SPI")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概念解析")]),t._v(" "),n("p",[t._v("SPI ，全称为 Service Provider Interface，是一种服务发现机制。它通过在ClassPath路径下的META-INF/services文件夹查找文件，自动加载文件里所定义的类。")]),t._v(" "),n("p",[t._v("这一机制为很多框架扩展提供了可能，比如在Dubbo、JDBC中都使用到了SPI机制。")])]),t._v(" "),n("h2",{attrs:{id:"hikari"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hikari"}},[t._v("#")]),t._v(" Hikari")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概念解析")]),t._v(" "),n("p",[n("code",[t._v("Hikari")]),t._v(" 取自日文（ひかり[shi ka li]，光），是快速，简单，可靠的数据源，spring boot2.0已经将HikariCP做为切换的数据源链接池，在官网测试中秒杀一切其他数据源，例如commons-dbcp，tomcat，c3po，德鲁伊。")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub地址"),n("OutboundLink")],1),t._v("： "),n("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/brettwooldridge/HikariCP"),n("OutboundLink")],1)]),t._v(" "),n("blockquote",[n("p",[t._v("Hikari的吞吐量性能对比图：")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(132),alt:"image-20200107103624817"}})]),t._v(" "),n("h3",{attrs:{id:"优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("字节码精简")]),t._v("：优化代码，直到编译后的字节码最少，这样CPU缓存可以加载更多程序代码。")]),t._v(" "),n("li",[n("strong",[t._v("优化代理和拦截器")]),t._v("：减少代码，如Hikari的Statement proxy只有100行代码，只有BoneCP的十分之一。")]),t._v(" "),n("li",[n("strong",[t._v("自定义数组类型（FastList）")]),t._v("：替代了ArrayList，避免每次get()都要进行 rang check，避免调用remove()时从头到尾的扫描。")]),t._v(" "),n("li",[n("strong",[t._v("自定义集合类型（ConcurrentBag）")]),t._v("：提高并发读写的效率。")])]),t._v(" "),n("h3",{attrs:{id:"基本设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本设计"}},[t._v("#")]),t._v(" 基本设计")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("Hikari")]),t._v("链接池采用了很多优化来提高并发数，具体可参考"),n("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP/wiki/Down-the-Rabbit-Hole",target:"_blank",rel:"noopener noreferrer"}},[t._v("HikariCP WiKi"),n("OutboundLink")],1),t._v("\n所有数据库链接池都遵守基本的设计规则，实现javax.sql.DataSource接口，里面最重要的方法就是Connection getConnection（）抛出SQLException。用于获取一个Connection，一个Connection就是一个数据库链接，就是一个TCP链接，建立TCP链接是需要进行3次握手的，这降低来链接的使用效率，也是各种数据库链接池存在的原因。")]),t._v(" "),n("p",[t._v("数据库链接池通过预先建立好Connection并缓存起来，这样的应用需要做数据查询的时候，直接从缓存中拿到Connection就可以使用来。数据库链接池还能够检测异常的链接，释放闲置的链接。")])])]),t._v(" "),n("h3",{attrs:{id:"可靠性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可靠性"}},[t._v("#")]),t._v(" 可靠性")]),t._v(" "),n("p",[t._v("对于数据库连接中断的情况，通过测试getConnection()，各种CP实现处理方法如下：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Hikari（A级）")]),t._v("： 等待5秒钟，如果连接还是没有恢复，则抛出SQLException；后续的getConnection()处理一样。")]),t._v(" "),n("li",[n("strong",[t._v("C3P0（C级）")]),t._v("：完全没有玩应，也没有提示，也不会在返回一个ConnectionTimout配置的超时时间后给与调用者任何通知；然后等待2分钟后醒来，返回一个error。")]),t._v(" "),n("li",[n("strong",[t._v("Tomcat（F级）")]),t._v("：返回一个Connection ，然后调用者用这个无效的Connection执行SQL，大约55秒之后醒来，这时候getConnection()返回一个error（没有等待参数配置的5秒钟，直接返回error）。")]),t._v(" "),n("li",[n("strong",[t._v("BoneCP（C级）")]),t._v("：跟Tomcat的处理方法一样，但是有了正常的反应，会等待5秒钟之后返回error。")])]),t._v(" "),n("h3",{attrs:{id:"基本字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本字段"}},[t._v("#")]),t._v(" 基本字段")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("PoolEntryCreator POOL_ENTRY_CREATOR")]),t._v("：用于创建PoolEntry，也就是用于创建Connection了，创建Connection是委托给驱动程序的。")])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("Collection <Runnable> addConnectionQueue")])]),t._v("：就是一个LinkedBlockingQueue，不过不能修改其中的内容。当正在创建连接Connection的时候这个队列有值。用户逐步判断当前线程池里面是否仍需要创建新的链接。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("ThreadPoolExecutor addConnectionExecutor")]),t._v("：创建Connection链接的执行是有这个线程池调度的。使用新的链接池不会而不使用当前的工作线程，以便不影响工作线程的执行（这样会导致工作线程超时）。")])]),t._v(" "),n("li",[n("p",[t._v("T"),n("strong",[t._v("hreadPoolExecutor closeConnectionExecutor")]),t._v("：关闭Connection的链接是有这个线程池调度的。")])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("ConcurrentBag <PoolEntry> connectionBag")])]),t._v("：这个是最重要的，一旦获取Connection都是从这里面获取，采用了ThreadLocal来减少竞争。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("ProxyLeakTaskFactory（泄漏任务工厂）")]),t._v("；参考ProxyLeakTask用于检测连接泄漏。")])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("ScheduledFuture <？> houseKeeper")])]),t._v("：用于管理链接池内部的链接，链接不足的了要创建链接，链接最大生存时间到了要关闭链接。线程池中的Connection就是有它初始化的。")])])]),t._v(" "),n("h3",{attrs:{id:"hikaridatasource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hikaridatasource"}},[t._v("#")]),t._v(" HikariDataSource")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("Hikari")]),t._v("中提供的"),n("code",[t._v("DataSource")]),t._v("是"),n("code",[t._v("HikariDataSource")]),t._v("，"),n("code",[t._v("HikariDataSource")]),t._v("实现了"),n("code",[t._v("HikariConfig")]),t._v("，和数据库的各种参数超时时间配置就正"),n("code",[t._v("HikariaConfig")]),t._v("中。")])]),t._v(" "),n("li",[n("p",[t._v("提供两种初始化方式，一种是替代的构造函数，一个新"),n("code",[t._v("HikariDataSource")]),t._v("时，数据源的链接不会建立，需要等到第一次调用"),n("code",[t._v("HikariDataSource")]),t._v("的"),n("code",[t._v("getConnection")]),t._v("方法。数据源建立后的相关信息保存在"),n("code",[t._v("HikariDataSource")]),t._v("中变量HikariPool。")])]),t._v(" "),n("li",[n("p",[t._v("另一种建立方式是调用带有"),n("code",[t._v("HikariConfig")]),t._v("的构造函数，这种方式适合多个数据源的建立，共享相同的部分配置。这种方式在调用构造函数的时候就建立了数据源的链接。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("HikariDataSource")]),t._v("的所有数据源获取都委托给了"),n("code",[t._v("HikariPool")]),t._v("，一个数据源会有一个"),n("code",[t._v("HikariPool")]),t._v("，一个"),n("code",[t._v("HikariPool")]),t._v("中有一个"),n("code",[t._v("ConcurrentBag")]),t._v("，一个"),n("code",[t._v("ConcurrentBag")]),t._v("中多个"),n("code",[t._v("PoolEntry")]),t._v("，一个"),n("code",[t._v("PoolEntry")]),t._v("对应一个"),n("code",[t._v("Connection")]),t._v("。")])])]),t._v(" "),n("h3",{attrs:{id:"fastlist"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fastlist"}},[t._v("#")]),t._v(" FastList")]),t._v(" "),n("p",[t._v("一个重要的(性能方面的)优化是消除了在ConnectionProxy中使用ArrayList实例来跟踪打开的语句实例。当一个语句被关闭时，它必须从这个集合中删除，当连接被关闭时，它必须迭代这个集合并关闭任何打开的语句实例，最后必须清除这个集合。Java ArrayList在每次get(int索引)调用时执行范围检查，这对于一般用途来说是明智的。但是，因为我们可以提供关于范围的保证，所以这种检查只是开销。")]),t._v(" "),n("p",[t._v("此外，remove(对象)实现从头到尾执行扫描，但是JDBC编程中的常见模式是在使用语句后立即关闭语句，或者以相反的顺序打开语句。在这种情况下，从尾部开始的扫描会有更好的效果。因此，"),n("code",[t._v("ArrayList<sql>")]),t._v("被替换为一个自定义类"),n("code",[t._v("FastList")]),t._v("，它消除了范围检查，并执行从尾部到头部的删除扫描。")]),t._v(" "),n("h3",{attrs:{id:"concurrentbag"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#concurrentbag"}},[t._v("#")]),t._v(" ConcurrentBag")]),t._v(" "),n("p",[t._v("ConcurrentBag（并发袋）设计主要为了解决并发对资源的争用，其中主要有"),n("code",[t._v("CopyOnWriteArrayList <T> sharedList")]),t._v("和"),n("code",[t._v("ThreadLocal <List <Object >> threadList")]),t._v("，"),n("code",[t._v("SynchronousQueue <T> handoffQueue")]),t._v("，当一个线程获取链接的时候首先从自己的ThreadLocal中的threadList获取，当获取失败的时候才从sharedList获取，当从sharedList获取还是失败的话，就等待在handoffQueue，这是一个同步的队列，当其他线程释放链接的时候，自己就会被唤醒。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("无锁的设计")])]),t._v(" "),n("li",[n("p",[t._v("ThreadLocal缓存")])]),t._v(" "),n("li",[n("p",[t._v("Queue-stealing")])]),t._v(" "),n("li",[n("p",[t._v("直接传球给队友的优化")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("  \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("borrow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),t._v(" timeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从threadList获取链接")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" threadList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" entry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" bagEntry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weakThreadLocals "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakReference")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bagEntry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATE_NOT_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" STATE_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从sharedList获取链接")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" waiting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" waiters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("incrementAndGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" bagEntry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" sharedList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATE_NOT_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" STATE_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If we may have stolen another waiter's connection, request another bag add.")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("waiting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                 listener"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBagItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("waiting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        listener"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBagItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("waiting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timeUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等待其他线程释放链接，超过timeout就获取失败了")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),t._v(" bagEntry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handoffQueue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NANOSECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bagEntry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareAndSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STATE_NOT_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" STATE_IN_USE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bagEntry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n           timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("elapsedNanos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10_000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        waiters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrementAndGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"hikari在maven中的依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hikari在maven中的依赖"}},[t._v("#")]),t._v(" Hikari在Maven中的依赖")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zaxxer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariCP")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.4")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("h3",{attrs:{id:"hikari在yml中的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hikari在yml中的配置"}},[t._v("#")]),t._v(" Hikari在yml中的配置")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("\n# 数据库配置\nspring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  datasource"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zaxxer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hikari"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HikariDataSource")]),t._v("\n  driverClassName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mysql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jdbc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Driver")]),t._v("\n  url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" jdbc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ssm"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("useUnicode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("characterEncoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("useSSL"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  username"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" root\n  password"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" root\n  # "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hikari")]),t._v(" 连接池配置\n  # 最小空闲连接数量\n  hikari"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    minimum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("idle"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    # 空闲连接存活最大时间，默认"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600000")]),t._v("（"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("分钟）\n    idle"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("180000")]),t._v("\n    # 连接池最大连接数，默认是"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    maximum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pool"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    # 此属性控制从池返回的连接的默认自动提交行为"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("默认值："),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    auto"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    # 连接池名称\n    pool"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyHikariCP")]),t._v("\n    # 此属性控制池中连接的最长生命周期，值"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("表示无限生命周期，默认"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1800000")]),t._v("即"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("分钟\n    max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("lifetime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1800000")]),t._v("\n    # 数据库连接超时时间"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("默认"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("秒，即"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n    connection"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n    connection"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("query"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SELECT "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"hikari配置参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hikari配置参数"}},[t._v("#")]),t._v(" Hikari配置参数")]),t._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"Hikari参数",href:"/技术栈-名词解析.assets/hikari-1.png"}},[n("img",{attrs:{src:t.$withBase("/技术栈-名词解析.assets/hikari-1.png"),alt:""}})])]),t._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"Hikari参数",href:"/技术栈-名词解析.assets/hikari-2.png"}},[n("img",{attrs:{src:t.$withBase("/技术栈-名词解析.assets/hikari-2.png"),alt:""}})])])]),t._v(" "),n("h2",{attrs:{id:"埋点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#埋点"}},[t._v("#")]),t._v(" 埋点")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("埋点")]),t._v(" "),n("blockquote",[n("p",[t._v("埋点的概念")])]),t._v(" "),n("ul",[n("li",[t._v("数据埋点是数据采集的一种重要方式，主要用来记录和收集终端用户的操作行为，其基本原理是在App/H5/PC等终端部署采集的SDK代码，当用户的行为满足某种条件的时候，比如进入某个页面、点击某个按钮等，会自动触发记录和存储，然后这些数据会被收集并被传输到终端提供商，或者是通过后端采集用户使用服务过程中的请求数据。")])]),t._v(" "),n("blockquote",[n("p",[t._v("埋点的用途")])]),t._v(" "),n("ul",[n("li",[t._v("终端提供商在收集到埋点数据之后，通过大数据处理、数据统计、数据分析、数据挖掘等加工处理，可以得到衡量产品状态的一些基本指标，比如活跃、留存、新增等大盘数据，从而洞察产品的状态。此外更重要的是随着数据挖掘等技术的兴起，埋点采集到的数据在以下方面的作用也越来越凸显：\n"),n("ul",[n("li",[t._v("驱动决策：ABtest、漏斗优化、用户增长、bug修复、精准营销、流失用户预警")]),t._v(" "),n("li",[t._v("驱动产品智能：智能推荐(千人千面)、场景化提示(私人助理)等")]),t._v(" "),n("li",[t._v("驱动安全：风险识别")])])])])]),t._v(" "),n("h2",{attrs:{id:"ddd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ddd"}},[t._v("#")]),t._v(" DDD")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("领域驱动设计")]),t._v(" "),n("p",[n("code",[t._v("DDD（Domain-Driven Design 领域驱动设计）")]),t._v("是由Eric Evans最先提出，目的是对软件所涉及到的领域进行建模，以应对系统规模过大时引起的软件复杂性的问题。整个过程大概是这样的，开发团队和领域专家一起通过 通用语言(Ubiquitous Language)去理解和消化领域知识，从领域知识中提取和划分为一个一个的子领域（核心子域，通用子域，支撑子域），并在子领域上建立模型，再重复以上步骤，这样周而复始，构建出一套符合当前领域的模型。")])]),t._v(" "),n("h2",{attrs:{id:"pdd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pdd"}},[t._v("#")]),t._v(" PDD")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("产品特性驱动设计")]),t._v(" "),n("p",[n("code",[t._v("PDD(Product-Feature Driven Design)")]),t._v("产品特性驱动设计,我们可以将它使用在我们的日常设计工作中,它可以运用在你的大小设计项目中,这是一种行为模式,一种思考角度,或者我们把它作为一种指导方法.它依靠产品的自身特性来驱动设计.它的成效非常明显,缩短了项目的时间,优化了项目流程,在项目中起到了设计的主动与严谨性,为我们的成果产生了直接的正面影响,并起到了强有力的支撑效应。")])]),t._v(" "),n("h2",{attrs:{id:"ugc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ugc"}},[t._v("#")]),t._v(" UGC")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("用户生成内容")]),t._v(" "),n("p",[t._v("互联网术语，全称为User Generated Content，也就是用户生成内容的意思。UGC的概念最早起源于互联网领域，即用户将自己原创的内容通过互联网平台进行展示或者提供给其他用户。UGC是伴随着以提倡个性化为主要特点的Web2.0概念兴起的。")])]),t._v(" "),n("h2",{attrs:{id:"mesos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mesos"}},[t._v("#")]),t._v(" Mesos")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概述")]),t._v(" "),n("p",[n("code",[t._v("Apache Mesos")]),t._v("是一款基于多资源（内存、CPU、磁盘、端口等）调度的开源集群管理套件，能使容错和分布式系统更加容易使用。其采用了Master/Slave结构来简化设计，将Master做的尽可能轻量级，仅保存了各种计算框架（Framwork）和Mesos Slave的状态信息,这些状态很容易在Mesos出现故障时被重构，所以使用zookeeper解决master单点故障问题。")])]),t._v(" "),n("h3",{attrs:{id:"mesos工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mesos工作原理"}},[t._v("#")]),t._v(" Mesos工作原理")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("工作原理")]),t._v(" "),n("p",[t._v("Mesos Master充当全局资源调度器角色，采用某种策略算法将某个Save\n上的空闲资源分配给某个Famework,而各种Framework则是通过自己的调度器向master注册进行接入，master slave则是收集任务状态和启动各个Framework的Executor。")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Mesos master")]),t._v("：负责管理各个Framework和Slave,并将Slave 上的资源分配给各个Framework。")]),t._v(" "),n("li",[n("strong",[t._v("Mesos Slave")]),t._v("：负责管理本节点上的各个Mesos Task,为各个Executor分配资源。")]),t._v(" "),n("li",[n("strong",[t._v("Framework")]),t._v("：计算框架，如:Hadoop、Spark等，可以通过MesosSchedulerDiver接入Mesos。")]),t._v(" "),n("li",[n("strong",[t._v("Executor")]),t._v("：执行器，在Mesos Slave上安装，用于启动计算框架中的Task。")])])]),t._v(" "),n("h2",{attrs:{id:"package-info-java"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#package-info-java"}},[t._v("#")]),t._v(" package-info.java")]),t._v(" "),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("概述")]),t._v(" "),n("p",[n("code",[t._v("pacakge-info.java")]),t._v("是一个Java文件，可以添加到任何的"),n("code",[t._v("Java源码包")]),t._v("中。"),n("code",[t._v("pacakge-info.java")]),t._v("的目标是提供一个包级的文档说明或者是包级的注释。"),n("code",[t._v("pacakge-info.java")]),t._v("文件中，唯一要求包含的内容是包的声明语句。Spring源码中，每个包中就会有一个"),n("code",[t._v("package-info.java")]),t._v("的类，也意味着一种规范。有如下特点：")]),t._v(" "),n("ul",[n("li",[t._v("不能随便被创建，由于包含"),n("code",[t._v("-")]),t._v("非法字符，无法通过IDE工具来创建，但是可以拷贝复制到包下；")]),t._v(" "),n("li",[t._v("不能有实现代码，"),n("code",[t._v("package-info.java")]),t._v("也会被编译成"),n("code",[t._v("package-info.class")]),t._v("，但是在"),n("code",[t._v("package-info.java")]),t._v("文件里不能声明"),n("code",[t._v("package-info")]),t._v("的类名称。")]),t._v(" "),n("li",[t._v("用于"),n("code",[t._v("JavaDoc")]),t._v("的生成，比如：")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * xxx包描述<br>\n * @author xxx <br>\n * date: 2020.01.23\n * @since 1.8\n * @version 1.0.0\n *\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[t._v("包注释：注释对于程序员来说非常重要，"),n("code",[t._v("pacakge-info.java")]),t._v("文件包含了包级的注释。我们还可以使用"),n("code",[t._v("ElementType")]),t._v("来自定义注释。比如：在包声明上加"),n("code",[t._v("@Deprecated")]),t._v("注解，可以让包中的所有类、接口等均为已过时。")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Deprecated")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);