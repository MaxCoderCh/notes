(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{213:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"百度面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#百度面试题"}},[t._v("#")]),t._v(" 百度面试题")]),t._v(" "),a("Badge",{attrs:{text:"高级JAVA",type:"primary"}}),t._v(" "),a("h2",{attrs:{id:"自我介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[t._v("#")]),t._v(" 自我介绍 "),a("Badge",{attrs:{text:"一面",type:"warning"}})],1),t._v(" "),a("h2",{attrs:{id:"对象相等的判断，equals方法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象相等的判断，equals方法实现"}},[t._v("#")]),t._v(" 对象相等的判断，equals方法实现")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" anObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" anObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" anotherString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("anObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" anotherString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" anotherString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("blockquote",[a("p",[t._v("说明：如果两个对象等价，前提是它们一定为相同的类型")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("判断引用值是否相等，相等即t返回rue，不用往下走；")])]),t._v(" "),a("li",[a("p",[t._v("判断类型是否匹配，类型相同，长度相等，逐个比较字符是否一样，完全符合，则返回ture，一旦不对，返回false；")])]),t._v(" "),a("li",[a("p",[t._v("类型不匹配，返回false。")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("引用不同，不相等；")])]),t._v(" "),a("li",[a("p",[t._v("类型不同，不相等；")])]),t._v(" "),a("li",[a("p",[t._v("长度不等，不相等；")])]),t._v(" "),a("li",[a("p",[t._v("字符不对等，不相等；")])]),t._v(" "),a("li",[a("p",[t._v("排除所有不符合的情况，即相等。")])])])]),t._v(" "),a("h2",{attrs:{id:"hashcode的作用，与-equal-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashcode的作用，与-equal-有什么区别"}},[t._v("#")]),t._v(" Hashcode的作用，与 equal 有什么区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("hashCode是用于查找使用的，而equals是用于比较两个对象的是否相等的。")])]),t._v(" "),a("li",[a("p",[t._v("hashCode的存在主要是用于查找的快捷性，如Hashtable，HashMap等，hashCode是用来在散列存储结构中确定对象的存储地址的；")])]),t._v(" "),a("li",[a("p",[t._v("如果两个对象相同，就是适用于equals(java.lang.Object) 方法，那么这两个对象的hashCode一定要相同；")])]),t._v(" "),a("li",[a("p",[t._v("如果对象的equals方法被重写，那么对象的hashCode也一定要重写，并且产生hashCode使用的对象，一定要和equals方法中使用的一致，否则就会违反上面提到的第2点；")])]),t._v(" "),a("li",[a("p",[t._v("两个对象的hashCode相同，并不一定表示两个对象就相同，也就是不一定适用于equals(java.lang.Object) 方法，只能够说明这两个对象在散列存储结构中，如Hashtable，他们“存放在同一个篮子里”。")])])])]),t._v(" "),a("h2",{attrs:{id:"java中cas算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java中cas算法"}},[t._v("#")]),t._v(" Java中CAS算法")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"g1回收器讲一下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g1回收器讲一下"}},[t._v("#")]),t._v(" G1回收器讲一下")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"hashmap，concurrenthashmap与linkedhashmap的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashmap，concurrenthashmap与linkedhashmap的区别"}},[t._v("#")]),t._v(" HashMap，ConcurrentHashMap与LinkedHashMap的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"如何在多线程环境下使用map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在多线程环境下使用map"}},[t._v("#")]),t._v(" 如何在多线程环境下使用Map")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"concurrenthashmap原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap原理"}},[t._v("#")]),t._v(" ConcurrentHashMap原理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"concurrenthashmap如何加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap如何加锁"}},[t._v("#")]),t._v(" ConcurrentHashMap如何加锁")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"多线程并发的同步实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程并发的同步实现"}},[t._v("#")]),t._v(" 多线程并发的同步实现")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")]),t._v(" "),a("blockquote",[a("p",[t._v("多线程并发的同步实现，有两个方法，每个方法里有a部分代码和b部分代码，我要让两个线程分别执行两个方法，并且让他们运行完a部分代码再一起向下执行，如何实现。")])])]),t._v(" "),a("h2",{attrs:{id:"tcp连接中的三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp连接中的三次握手"}},[t._v("#")]),t._v(" TCP连接中的三次握手")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")]),t._v(" "),a("blockquote",[a("p",[t._v("TCP连接中的三次握手和四次挥手，四次挥手的最后一个ack的作用是什么，为什么要time wait，为什么是2msl。")])])]),t._v(" "),a("h2",{attrs:{id:"aio，nio，bio的了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aio，nio，bio的了解"}},[t._v("#")]),t._v(" aio，nio，bio的了解")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"reetrantlock和synchronized的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reetrantlock和synchronized的区别"}},[t._v("#")]),t._v(" ReetrantLock和synchronized的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"java有哪些悲观锁的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java有哪些悲观锁的实现"}},[t._v("#")]),t._v(" Java有哪些悲观锁的实现")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"java有哪些类实现了乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java有哪些类实现了乐观锁"}},[t._v("#")]),t._v(" Java有哪些类实现了乐观锁")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"谈谈spring两大特性，aop和ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谈谈spring两大特性，aop和ioc"}},[t._v("#")]),t._v(" 谈谈Spring两大特性，AOP和IOC  "),a("Badge",{attrs:{text:"二面",type:"warning"}})],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"spring的初始化过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring的初始化过程"}},[t._v("#")]),t._v(" Spring的初始化过程")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"spring-bean的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean的生命周期"}},[t._v("#")]),t._v(" Spring bean的生命周期")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"多个rpc请求进来，服务器怎么处理并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个rpc请求进来，服务器怎么处理并发"}},[t._v("#")]),t._v(" 多个RPC请求进来，服务器怎么处理并发")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"mysql的索引实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql的索引实现原理"}},[t._v("#")]),t._v(" MySQL的索引实现原理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"聚合索引和非聚合索引的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合索引和非聚合索引的区别"}},[t._v("#")]),t._v(" 聚合索引和非聚合索引的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"mysql有哪几种join方式，底层原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql有哪几种join方式，底层原理是什么"}},[t._v("#")]),t._v(" MySQL有哪几种join方式，底层原理是什么")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"mysql的引擎讲一下，有什么区别，使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql的引擎讲一下，有什么区别，使用场景"}},[t._v("#")]),t._v(" MySQL的引擎讲一下，有什么区别，使用场景")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"数据库的事务，四个性质说一下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的事务，四个性质说一下"}},[t._v("#")]),t._v(" 数据库的事务，四个性质说一下")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"常见的分布式事务解决方案有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的分布式事务解决方案有哪些"}},[t._v("#")]),t._v(" 常见的分布式事务解决方案有哪些")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"介绍项目，以及画相关的分布式架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍项目，以及画相关的分布式架构图"}},[t._v("#")]),t._v(" 介绍项目，以及画相关的分布式架构图 "),a("Badge",{attrs:{text:"三面",type:"warning"}})],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"数据库的备份和恢复怎么实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的备份和恢复怎么实现的"}},[t._v("#")]),t._v(" 数据库的备份和恢复怎么实现的")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")]),t._v(" "),a("blockquote",[a("p",[t._v("数据库的备份和恢复怎么实现的，主从复制怎么做的，什么时候会出现数据不一致，如何解决？")])])]),t._v(" "),a("h2",{attrs:{id:"netty的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#netty的实现原理"}},[t._v("#")]),t._v(" Netty的实现原理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"分布式下redis如何保证线程安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式下redis如何保证线程安全"}},[t._v("#")]),t._v(" 分布式下Redis如何保证线程安全")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"redis怎么做持久化？两种持久化的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis怎么做持久化？两种持久化的区别"}},[t._v("#")]),t._v(" Redis怎么做持久化？两种持久化的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"mongodb、hbase、memcached、redis的应用场景和区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb、hbase、memcached、redis的应用场景和区别"}},[t._v("#")]),t._v(" MongoDB、Hbase、Memcached、Redis的应用场景和区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"docker平时怎么使用的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker平时怎么使用的"}},[t._v("#")]),t._v(" Docker平时怎么使用的")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"并发mysql的场景，查询优化怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发mysql的场景，查询优化怎么做"}},[t._v("#")]),t._v(" 并发mysql的场景，查询优化怎么做")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])]),t._v(" "),a("h2",{attrs:{id:"设计一个高并发高可用的架构方案，关键核心设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个高并发高可用的架构方案，关键核心设计"}},[t._v("#")]),t._v(" 设计一个高并发高可用的架构方案，关键核心设计")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("参考答案")])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);