(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{167:function(t,o,a){"use strict";a.r(o);var s=a(0),r=Object(s.a)({},(function(){var t=this,o=t.$createElement,a=t._self._c||o;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("h2",{attrs:{id:"第一章-什么是微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-什么是微服务"}},[t._v("#")]),t._v(" 第一章 什么是微服务")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[a("code",[t._v("微服务")]),t._v("定义了服务、领域对象和事件。围绕核心的是与外部世界接口对接的适配器。适配器示例包括数据库访问组件、生产和消费消息的消息组件和暴露了 API 或实现了一个 UI 的 web 组件。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/什么是微服务/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第二章-linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-linux"}},[t._v("#")]),t._v(" 第二章 Linux")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[a("code",[t._v("Linux")]),t._v("是一种自由和开放源码的类 UNIX 操作系统，使用 Linux 内核。目前存在着许多不同的 Linux 发行版，可安装在各种各样的电脑硬件设备，从手机、平板电脑、路由器和影音游戏控制台，到桌上型电脑，大型电脑和超级电脑。 Linux 是一个领先的操作系统，世界上运算最快的 10 台超级电脑运行的都是 Linux 操作系统。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/Linux/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第三章-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-docker"}},[t._v("#")]),t._v(" 第三章 Docker")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[a("code",[t._v("官网地址")]),t._v("：https://www.docker.com/")]),t._v(" "),a("p",[a("code",[t._v("Docker")]),t._v(" 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年云服务技术的一次革新，并于 [2013 年 3 月以 Apache 2.0 授权协议开源][docker-soft]，主要项目代码在 "),a("a",{attrs:{href:"https://github.com/moby/moby",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1),t._v(" 上进行维护。Docker 项目后来还加入了 Linux 基金会，并成立推动 "),a("a",{attrs:{href:"https://www.opencontainers.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("开放容器联盟（OCI）"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/Docker/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第四章-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-dockerfile"}},[t._v("#")]),t._v(" 第四章 Dockerfile")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[t._v("Dockerfile 是一个文本文件，其内包含了一条条的 "),a("strong",[t._v("指令(Instruction)")]),t._v("，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/Dockerfile/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第五章-dockercompose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五章-dockercompose"}},[t._v("#")]),t._v(" 第五章 DockerCompose")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[t._v("Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 OpenStack 中的 Heat 十分类似。")]),t._v(" "),a("p",[t._v("其代码目前在 "),a("a",{attrs:{href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/docker/compose"),a("OutboundLink")],1),t._v(" 上开源。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/DockerCompose/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第六章-再谈微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六章-再谈微服务"}},[t._v("#")]),t._v(" 第六章 再谈微服务")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[t._v("微服务架构是一种架构思想，旨在通过将功能分解到各个离散的服务中以实现对解决方案的解耦。它的主要作用是将功能分解到离散的各个服务当中，从而降低系统的耦合性，并提供更加灵活的服务支持。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/再谈微服务/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第七章-spring-boot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七章-spring-boot"}},[t._v("#")]),t._v(" 第七章 Spring Boot")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[a("code",[t._v("Spring Boot")]),t._v("可以称之为 "),a("strong",[t._v("新一代 JavaEE 开发标准")]),t._v("；随着动态语言的流行 (Ruby、Groovy、Scala、Node.js)，Java 的开发显得格外的笨重：繁多的配置、低下的开发效率、复杂的部署流程以及第三方技术集成难度大。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/SpringBoot/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第八章-spring-cloud-alibaba"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八章-spring-cloud-alibaba"}},[t._v("#")]),t._v(" 第八章 Spring Cloud Alibaba")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[t._v("Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。")]),t._v(" "),a("p",[t._v("依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/SpringCloudAlibaba/"}},[t._v("开始学习")])],1),t._v(" "),a("h2",{attrs:{id:"第九章-spring-cloud-alibaba-dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第九章-spring-cloud-alibaba-dubbo"}},[t._v("#")]),t._v(" 第九章 Spring Cloud Alibaba Dubbo")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("摘要")]),t._v(" "),a("p",[t._v("Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源 Java RPC 分布式服务框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。她最大的特点是按照分层的方式来架构，使用这种方式可以使各个层之间解耦合（或者最大限度地松耦合）。从服务模型的角度来看，Dubbo 采用的是一种非常简单的模型，要么是提供方提供服务，要么是消费方消费服务，所以基于这一点可以抽象出服务提供方（Provider）和服务消费方（Consumer）两个角色。")])]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/ludi/SpringCloudAlibabaDubbo/"}},[t._v("开始学习")])],1)])}),[],!1,null,null,null);o.default=r.exports}}]);